name: Daily Natural Frontend Contributions

on:
  schedule:
    - cron: '23 8 * * 1'
    - cron: '17 11 * * 2'
    - cron: '42 15 * * 3'
    - cron: '59 17 * * 4'
    - cron: '25 21 * * 5'
    - cron: '08 13 * * 6'
  workflow_dispatch:

jobs:
  contribute:
    runs-on: ubuntu-latest
    env:
      GIT_AUTHOR_NAME: Franco Kaddour
      GIT_COMMITTER_NAME: Franco Kaddour
      GIT_AUTHOR_EMAIL: Francokaddour@gmail.com
      GIT_COMMITTER_EMAIL: Francokaddour@gmail.com
      GH_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
    steps:
      - name: Wait a random extra 0-30 minutes to simulate human behavior
        run: sleep $(( RANDOM % 1800 ))

      - name: Checkout your own repo
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Set up Python for scripting
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Prepare list of frontend popular repos
        run: |
          cat >repos.txt <<EOF
          vercel/next.js
          vitejs/vite
          facebook/react
          vuejs/core
          angular/angular
          sveltejs/svelte
          solidjs/solid
          withastro/astro
          reduxjs/redux
          mui/material-ui
          ant-design/ant-design
          tailwindlabs/tailwindcss
          react-hook-form/react-hook-form
          remix-run/remix
          chakra-ui/chakra-ui
          nuxt/nuxt
          storybookjs/storybook
          react-dnd/react-dnd
          testing-library/react-testing-library
          emotion-js/emotion
          styled-components/styled-components
          react-icons/react-icons
          react-router/react-router
          tanstack/table
          pmndrs/zustand
          pmndrs/jotai
          JedWatson/react-select
          react-datepicker/react-datepicker
          react-toastify/react-toastify
          cookpete/react-player
          EOF

      - name: Try repos until success
        id: contribute_any
        env:
          GH_TOKEN: ${{ env.GH_TOKEN }}
        run: |
          set -e
          success=""
          while read repo; do
            echo "Trying $repo"
            # Detect default branch
            branch=$(gh repo view "$repo" --json defaultBranchRef -q ".defaultBranchRef.name" 2>/dev/null || echo "")
            if [ -z "$branch" ]; then
              echo "Could not get default branch for $repo. Skipping."
              continue
            fi

            git clone --depth 1 --branch "$branch" "https://github.com/$repo.git" target-repo 2>/dev/null || { echo "Clone failed for $repo. Skipping."; continue; }
            cd target-repo

            # Find a file to edit
            file=""
            for f in README.md readme.md docs/*.md docs/**/*.md examples/*.js examples/**/*.js test/*.js test/**/*.js tests/*.js tests/**/*.js .github/*.md .github/**/*.md; do
              if [ -f "$f" ]; then
                file="$f"
                break
              fi
            done
            if [ -z "$file" ]; then
              file=$(find . -type f \( -name "*.md" -o -name "*.js" \) | head -1)
            fi
            if [ -z "$file" ]; then
              cd ..
              rm -rf target-repo
              echo "No eligible file found in $repo. Skipping."
              continue
            fi

            # Make a small contribution
            echo "" >> "$file"
            echo "<!-- Contributed by Franco Kaddour via a small improvement for learning and OSS love. -->" >> "$file"
            echo "Done minor edit in $file"

            # Create branch, commit and push
            branch_name="franco/contrib-$(date +%s)"
            git checkout -b "$branch_name"
            git config user.name "${GIT_AUTHOR_NAME}"
            git config user.email "${GIT_AUTHOR_EMAIL}"
            git remote set-url origin https://x-access-token:${GH_TOKEN}@github.com/$repo.git
            git add "$file"
            git commit -m "Small improvement: docs/example/test (learning and OSS ❤️)"
            git push --set-upstream origin "$branch_name" || { echo "Push failed for $repo. Skipping."; cd ..; rm -rf target-repo; continue; }
            echo "branch=$branch_name" >> $GITHUB_OUTPUT

            # Try to create PR
            pr_url=$(gh pr create --title "Small docs/example/test improvement (learning and OSS ❤️)" \
              --body "Hi! I made a small contribution to your project—just a tiny improvement to the docs/examples/tests. I love learning from open source and wanted to give back, even in a small way. Thanks for maintaining such a great frontend resource!\n—Franco" \
              --head "$branch_name" --base "$branch" 2>/dev/null || echo "")
            if [ -z "$pr_url" ]; then
              echo "PR creation failed for $repo. Skipping."
              cd ..
              rm -rf target-repo
              continue
            fi
            echo "pr_url=$pr_url" >> $GITHUB_OUTPUT

            # Try to create Issue
            gh issue create --title "Friendly contribution: small docs/example/test improvement" \
              --body "Hello!\nI just opened a pull request with a small contribution (mostly docs/examples/tests).\nI really appreciate the effort you put into this project and wanted to participate, even if it’s just a little.\nThank you for your awesome work!\n—Franco\n\nPR: $pr_url" || true

            # Cleanup
            cd ..
            rm -rf target-repo
            success="ok"
            break
          done < repos.txt

          if [ -z "$success" ]; then
            echo "No successful contribution could be made."
            exit 78
          fi

  update-profile:
    needs: contribute
    runs-on: ubuntu-latest
    if: always()
    env:
      GH_TOKEN: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
    steps:
      - name: Checkout your profile repo
        uses: actions/checkout@v4
        with:
          repository: FrancoKaddour/FrancoKaddour
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
          path: profile

      - name: Install GitHub CLI
        run: sudo apt-get update && sudo apt-get install -y gh

      - name: Fetch recent PRs opened by you
        run: |
          gh search prs --author FrancoKaddour --sort created --order desc --limit 5 --json title,url,repository \
          | jq -r '.[] | "* [\(.title)](\(.url)) in [\(.repository.nameWithOwner)](https://github.com/\(.repository.nameWithOwner))"' > profile/RECENT_PRS.md
        env:
          GH_TOKEN: ${{ env.GH_TOKEN }}

      - name: Update README with latest PRs
        run: |
          cd profile
          awk '/<!-- recent_prs_start -->/{print; system("cat RECENT_PRS.md"); f=1} /<!-- recent_prs_end -->/{f=0} !f' README.md > README.new
          mv README.new README.md

      - name: Commit and push profile update
        run: |
          cd profile
          git config user.name "Franco Kaddour"
          git config user.email "your@email.com"
          git add README.md
          git commit -m "Update recent contributions [bot]" || true
          git push
