name: Daily Frontend Contributions

on:
  schedule:
    - cron: '0 6,10,14,18,22 * * *'
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write
  issues: write

jobs:
  contribute:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.AUTO_CONTRIB_TOKEN }}
    steps:
      - name: Setup GitHub CLI
        uses: cli/cli-action@v2

      - name: Select random repo
        id: pick
        run: |
          REPOS=(
            "facebook/react"
            "tailwindlabs/tailwindcss"
            "vercel/next.js"
            "vuejs/core"
            "sveltejs/svelte"
            "chakra-ui/chakra-ui"
            "storybookjs/storybook"
            "axios/axios"
            "lodash/lodash"
            "chartjs/Chart.js"
            "adobe/react-spectrum"
            "mui/material-ui"
            "reduxjs/redux-toolkit"
            "react-hook-form/react-hook-form"
            "framer/motion"
            "threejs/three.js"
          )
          SELECTED_REPO=${REPOS[$RANDOM % ${#REPOS[@]}]}
          echo "selected_repo=$SELECTED_REPO" >> $GITHUB_OUTPUT

      - name: Checkout random repo
        uses: actions/checkout@v4
        with:
          repository: ${{ steps.pick.outputs.selected_repo }}
          token: ${{ secrets.AUTO_CONTRIB_TOKEN }}
          path: target-repo
          ref: main
          fetch-depth: 0
          sparse-checkout: |
            README.md
            examples/

      - name: Make human-like contribution
        run: |
          cd target-repo
          sleep $((60 + RANDOM % 240))
          # CorrecciÃ³n ortogrÃ¡fica en README
          if [ -f README.md ]; then
            sed -i 's/hte/the/g' README.md
            sed -i 's/Javscript/JavaScript/g' README.md
          fi
          # AÃ±adir ejemplo si no existe
          mkdir -p examples
          if [ ! -f examples/franco-usage.js ]; then
            echo "// Ejemplo por @FrancoKaddour" > examples/franco-usage.js
            echo "export default () => console.log('Hello from Franco!');" >> examples/franco-usage.js
          fi

      - name: Create PR
        run: |
          cd target-repo
          git config user.name "Franco Kaddour"
          git config user.email "francokaddour@gmail.com"
          BRANCH_NAME="franco-improvements-$(date +'%m%d')"
          git checkout -b $BRANCH_NAME
          git add .
          git commit -m "ðŸ“š Mejoras de documentaciÃ³n y ejemplos"
          git push origin $BRANCH_NAME
          sleep $((120 + RANDOM % 360))
          gh pr create \
            --title "Mejoras de documentaciÃ³n (por @FrancoKaddour)" \
            --body "Hola equipo! He mejorado la documentaciÃ³n y aÃ±adÃ­ un ejemplo prÃ¡ctico basado en mi experiencia" \
            --base main \
            --head $BRANCH_NAME \
            --repo ${{ steps.pick.outputs.selected_repo }}

      - name: Engage with community
        run: |
          sleep $((300 + RANDOM % 600))
          ISSUE_NUMBER=$(gh issue list --repo ${{ steps.pick.outputs.selected_repo }} --limit 1 --json number -q '.[0].number')
          if [ -n "$ISSUE_NUMBER" ]; then
            gh issue comment $ISSUE_NUMBER --repo ${{ steps.pick.outputs.selected_repo }} \
              --body "Interesante problema! Desde mi experiencia con frontend, sugerirÃ­a probar este enfoque..."
          else
            echo "No hay issues para comentar"
          fi

      - name: Verify access
        run: |
          gh auth status
          gh api /repos/${{ steps.pick.outputs.selected_repo }} --jq .permissions

  update-profile:
    runs-on: ubuntu-latest
    needs: contribute
    env:
      GH_TOKEN: ${{ secrets.AUTO_CONTRIB_TOKEN }}
    steps:
      - name: Setup GitHub CLI
        uses: cli/gh-action@v2

      - name: Checkout profile repo
        uses: actions/checkout@v4
        with:
          repository: FrancoKaddour/FrancoKaddour
          token: ${{ secrets.AUTO_CONTRIB_TOKEN }}
          path: profile

      - name: Add contributions section
        run: |
          cd profile
          echo -e "\n## ðŸš€ Ãšltimas Contribuciones" > new-section.md
          echo "### $(date '+%d/%m/%Y')" >> new-section.md
          gh pr list --author FrancoKaddour --limit 5 --json repository,url,title | \
            jq -r '.[] | "- [\(.repository.name)](\(.url)) - \(.title)"' >> new-section.md
          awk '/<!-- CONTRIB_START -->/{print; system("cat new-section.md"); f=1} /<!-- CONTRIB_END -->/{f=0} !f' README.md > tmp.md
          mv tmp.md README.md
          rm new-section.md

      - name: Commit & Push changes
        run: |
          cd profile
          git config user.name "Franco Kaddour"
          git config user.email "francokaddour@gmail.com"
          git pull --rebase || true
          git add README.md
          git commit -m "âœ¨ Actualizar contribuciones" || echo "Sin cambios"
          git push
